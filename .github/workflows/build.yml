name: Build Windows Executable - PyInstaller
# Description:
# Most of my projects come with a build.bat script that uses PyInstaller to freeze the examples
# to an executable file. This Action will set up the envrionment and run this build.bat script,
# then upload the resulting executables to a google cloud bucket.
# Additionally the executables will be compressed and encrypted using 7z

on:
  push:
    branches:
      - main # Trigger on push to master branch

jobs:
  build:
    runs-on: windows-latest # Use a Windows runner
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:        
    - uses: 'actions/checkout@v4'
      with:
        fetch-depth: 0

    
    - uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        status: ${{ job.status }}
        content: |
          ${{ github.event_name == 'push' && format('Hey <@here>! A new commit was pushed to {0}!', github.repository) || '' }}
          ${{ github.event_name == 'pull_request' && format('Hey <@here>! A new pull request has been opened on {0}!', github.repository) || '' }}
          ${{ github.event_name == 'release' && format('Hey <@here>! A new release was created for project {0}!', github.event.repository.name) || '' }}
        title: |
          ${{ github.event_name == 'push' && 'Push Notification' || '' }}
          ${{ github.event_name == 'pull_request' && 'Pull Request Notification' || '' }}
          ${{ github.event_name == 'release' && 'Release Notification' || '' }}
        description: |
          ${{ github.event_name == 'push' && format('Commit `{0}`<br>Branch `{1}`\nMessage: `{2}`\nCheck out the commit [here]({3}/{4}/commit/{5})', github.sha, github.ref, github.event.head_commit.message, github.server_url, github.repository, github.sha) || '' }}
          
          ${{ github.event_name == 'pull_request' && format('PR #{0} - `{1}`\nSource branch: `{2}`\nView it [here]({3})', github.event.pull_request.number, github.event.pull_request.title, github.event.pull_request.head.ref, github.event.pull_request.html_url) || '' }}
          
          ${{ github.event_name == 'release' && format('Version `{0}`\nClick [here]({1}) to download!', github.event.release.tag_name, github.event.release.html_url) || '' }}
        color: |
          ${{ github.event_name == 'push' && '0x00ff00' || '' }}
          ${{ github.event_name == 'pull_request' && '0xff0000' || '' }}
          ${{ github.event_name == 'release' && '0x0000ff' || '' }}
        url: "${{ github.server_url }}/${{ github.repository }}"
        username: GitHub Actions
        avatar_url: "https://avatars.githubusercontent.com/u/19204702"
